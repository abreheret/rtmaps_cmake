if( CMAKE_CL_64 OR CMAKE_SIZEOF_VOID_P EQUAL 8 ) 
	set(ARCH_TYPE "x64")
	message(STATUS "ARCH_TYPE = x64")
else( CMAKE_CL_64 OR CMAKE_SIZEOF_VOID_P EQUAL 8 ) 
	set(ARCH_TYPE "x86")
	message(STATUS "ARCH_TYPE = x86")
endif( CMAKE_CL_64 OR CMAKE_SIZEOF_VOID_P EQUAL 8 )

SET(RTMAPS_DIR $ENV{RTMAPS_SDKDIR})
message(STATUS "RTMAPS_DIR = ${RTMAPS_DIR}")

find_path( RTMAPS_INCLUDE maps.hpp PATHS ${RTMAPS_DIR}/include )
if( ${RTMAPS_INCLUDE} STREQUAL "RTMAPS_INCLUDE-NOTFOUND" ) 
	message( FATAL_ERROR "FATAL_ERROR : RTMaps is not found ! ")
else ()
	message(STATUS "Found RTMaps in ${RTMAPS_INCLUDE}")
endif()

if(WIN32)
	if(MSVC) 
		if(MSVC80)
			if(ARCH_TYPE STREQUAL "x86")
				find_library (RTMAPS_LIBRARY rtmaps_pck.lib PATHS ${RTMAPS_DIR}/lib/vc.net2005)
				SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib/vc.net2005)
			else(ARCH_TYPE STREQUAL "x86")
				find_library (RTMAPS_LIBRARY rtmaps_pck.lib PATHS ${RTMAPS_DIR}/lib/vc.net2005_x64)
				SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib/vc.net2005_x64)
			endif(ARCH_TYPE STREQUAL "x86")
		elseif(MSVC90)
			if(ARCH_TYPE STREQUAL "x86")
				find_library (RTMAPS_LIBRARY rtmaps_pck.lib PATHS ${RTMAPS_DIR}/lib/vc.net2008)
				SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib/vc.net2008)
			else(ARCH_TYPE STREQUAL "x86")
				find_library (RTMAPS_LIBRARY rtmaps_pck.lib PATHS ${RTMAPS_DIR}/lib/vc.net2008_x64)
				SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib/vc.net2008_x64)
			endif(ARCH_TYPE STREQUAL "x86")
		elseif(MSVC10)
			if(ARCH_TYPE STREQUAL "x86")
				find_library (RTMAPS_LIBRARY rtmaps_pck.lib PATHS ${RTMAPS_DIR}/lib/vc.net2010)
				SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib/vc.net2010)
			else(ARCH_TYPE STREQUAL "x86")
				find_library (RTMAPS_LIBRARY rtmaps_pck.lib PATHS ${RTMAPS_DIR}/lib/vc.net2010_x64)
				SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib/vc.net2010_x64)
			endif(ARCH_TYPE STREQUAL "x86")		
		elseif(MSVC11)
			if(ARCH_TYPE STREQUAL "x86")
				find_library (RTMAPS_LIBRARY rtmaps_pck.lib PATHS ${RTMAPS_DIR}/lib/vc.net2012)
				SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib/vc.net2012)
			else(ARCH_TYPE STREQUAL "x86")
				find_library (RTMAPS_LIBRARY rtmaps_pck.lib PATHS ${RTMAPS_DIR}/lib/vc.net2012_x64)
				SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib/vc.net2012_x64)
			endif(ARCH_TYPE STREQUAL "x86")		
		elseif(MSVC12)
			if(ARCH_TYPE STREQUAL "x86")
				find_library (RTMAPS_LIBRARY rtmaps_pck.lib PATHS ${RTMAPS_DIR}/lib/vc.net2013)
				SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib/vc.net2013)
			else(ARCH_TYPE STREQUAL "x86")
				find_library (RTMAPS_LIBRARY rtmaps_pck.lib PATHS ${RTMAPS_DIR}/lib/vc.net2013_x64)
				SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib/vc.net2013_x64)
			endif(ARCH_TYPE STREQUAL "x86")	
		else(MSVC80)
			message( FATAL_ERROR " msvc was not found !")
		endif (MSVC80)
	else(MSVC) 
		message( FATAL_ERROR "not link lib RTMaps without msvc ! ")
	endif(MSVC)
else(WIN32) 	
	SET(RTMAPS_LIB_DIR ${RTMAPS_DIR}/lib)
endif(WIN32)


message( STATUS "RTMAPS_INCLUDE = ${RTMAPS_INCLUDE}")
message( STATUS "RTMAPS_LIBRARY = ${RTMAPS_LIB_DIR}")

if(NOT RTMAPS_INCLUDE MATCHES NOTFOUND)
  if(NOT RTMAPS_LIBRARY MATCHES NOTFOUND)
    set( RTMAPS_FOUND TRUE )
    include_directories( ${RTMAPS_INCLUDE} )
    link_directories( ${RTMAPS_LIB_DIR} )
  endif( )
endif( )

if(NOT DEFINED RTMAPS_FOUND)
  message( STATUS "RTMaps was not found (required)!")
else ( )
  message( STATUS "RTMaps was found here ${RTMAPS_DIR}")
endif( )

if(ARCH_TYPE STREQUAL "x86")
	set(PLATFORM_TYPE Win32)
else()
	set(PLATFORM_TYPE x64)
endif()

macro(configure_rtmaps pck_name )
	if(ARCH_TYPE STREQUAL "x86")
		SET_TARGET_PROPERTIES(${pck_name} PROPERTIES LINK_FLAGS_DEBUG "${LINK_FLAGS} /NODEFAULTLIB:MSVCRT /INCLUDE:_MAPSPckInit /INCLUDE:_MAPSGetModulesDefStruct" DEBUG_POSTFIX "_d")
		SET_TARGET_PROPERTIES(${pck_name} PROPERTIES LINK_FLAGS_RELEASE "${LINK_FLAGS} /NODEFAULTLIB:LIBCMTD /INCLUDE:_MAPSPckInit /INCLUDE:_MAPSGetModulesDefStruct" RELEASE_POSTFIX "_r")
	else()
		SET_TARGET_PROPERTIES(${pck_name} PROPERTIES LINK_FLAGS_DEBUG "${LINK_FLAGS} /NODEFAULTLIB:MSVCRT /INCLUDE:MAPSPckInit /INCLUDE:MAPSGetModulesDefStruct" DEBUG_POSTFIX "_d")
		SET_TARGET_PROPERTIES(${pck_name} PROPERTIES LINK_FLAGS_RELEASE "${LINK_FLAGS} /NODEFAULTLIB:LIBCMTD /INCLUDE:MAPSPckInit /INCLUDE:MAPSGetModulesDefStruct" RELEASE_POSTFIX "_r")
	endif()
	SET_TARGET_PROPERTIES(${pck_name} PROPERTIES COMPILE_FLAGS "${COMPILE_FLAGS} -D_CRT_SECURE_NO_WARNINGS -D_ALLOW_ITERATOR_DEBUG_LEVEL_MISMATCH")
	SET_TARGET_PROPERTIES(${pck_name} PROPERTIES SUFFIX ".pck")
	add_custom_command(TARGET ${pck_name} POST_BUILD COMMAND $ENV{RTMAPS_SDKDIR}/bin/rtmaps_package_sign.exe -platform ${PLATFORM_TYPE} -package $<TARGET_FILE:${pck_name}> -info $<TARGET_FILE:${pck_name}>.pckinfo )
endmacro()